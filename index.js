// Generated by LiveScript 1.2.0
var path, PluginError, reduce;
path = require('path');
PluginError = require('plugin-error');
reduce = require('stream-reduce');
module.exports = function(propName, fileName){
  var propName_, initializeFile, appendProp, pluck;
  propName_ = propName || 'data';
  initializeFile = function(file, prop){
    var file_;
    file_ = file.clone();
    file_[prop] = [file[prop]];
    file_.path = fileName
      ? path.join(file_.base, fileName)
      : file_.path;
    return file_;
  };
  appendProp = function(appendTo, appendFrom, prop){
    appendTo[prop].push(appendFrom[prop]);
    return appendTo;
  };
  pluck = function(plucked, file){
    switch (false) {
    case !file.isNull():
      return plucked;
    case !file.isStream():
      return this.emit(('error', new PluginError('gulp-pluck', {
        message: 'Streaming not supported'
      })));
    case !plucked:
      return appendProp(plucked, file, propName_);
    default:
      return initializeFile(file, propName_);
    }
  };
  return reduce(pluck, void 8);
};
